{"version":3,"sources":["testlogo.png","nav.js","head.js","aboutItem.js","about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","href","index_esm","React","Component","Header","id","style","backgroundColor","height","position","overflow","src","image","AboutItem","_this","toggleExpand","expanded","state","setState","onClick","fi_index_esm","question","answer","About","faq","map","idx","aboutItem","key","App","src_head","src_nav","src_about","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e28bfba4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testlogo.f11c5d0c.png\";","import React from 'react';\nimport './nav.css';\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\n\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n       \n    }\n\n    render() {\n    \n        return (\n          <div className=\"Navbar\">\n            <a href=\"#home\" className=\"BoxLogo\">\n              <div />\n              Nate Donato\n            </a>\n\n            <div className=\"NavLinks\">\n                <a href=\"#about\">About</a>\n                <a>Projects</a>\n                <a>Skills</a>\n                <a>Resume</a>   \n            </div>\n\n            <div className=\"NavLinks Icons\">\n              <a href=\"https://github.com/natedonato/\">\n                <FaGithub />\n              </a>\n              <a href=\"https://www.linkedin.com/in/nate-donato-781a9b187/\">\n                <FaLinkedin />\n              </a>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport './head.css';\nimport image from './testlogo.png';\n\nfunction Header(){\n\n\n\n    return(\n      <div id=\"home\" style={{backgroundColor: \"lightblue\", height: \"520px\", position: \"relative\", overflow: \"hidden\"}}>\n          <div className=\"headerText\">\n              <h1>\n                  ND\n              </h1>\n              < h3 > Developer < /h3>\n              <h3>Designer</h3>\n              <h3>Engineer</h3>\n          </div>\n          <img src={image} />\n      </div>\n    )\n\n\n}\n\nexport default Header;","import React from 'react';\nimport {\n    FiPlusCircle,\n    FiMinusCircle\n} from \"react-icons/fi\";\nimport { FaPlusCircle } from 'react-icons/fa';\n\n\nclass AboutItem extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {expanded: false};\n    }\n\n    toggleExpand = () => {\n        let expanded = !this.state.expanded;\n        this.setState({expanded});\n    }\n\n    render(){\n        return(\n        <div className=\"aboutItem\" >\n            < p className = \"aboutQ\"\n            onClick = {\n                this.toggleExpand\n            } >\n                <div className=\"aboutIcons\">\n                    {this.state.expanded ? < FiMinusCircle /> : < FiPlusCircle />}\n                </div>\n                {this.props.question}\n            </p>\n            {this.state.expanded ? \n            <p className=\"aboutA\">\n                {this.props.answer}\n            </p>\n            : ''\n            }\n        </div>\n        )\n    }\n\n}\n\nexport default AboutItem;","import React from 'react';\nimport AboutItem from './aboutItem';\nimport './about.css';\n\nclass About extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            faq: [{question: \"Building an informational page with occasionally updating content?\", \n            answer: \"I have deployed projects using Gatsby or Jekyll to generate static sites for lightning fast load times and reliable performance.\"\n            },\n            {question: \"Need to handle lots of dynamic user data?\",\n            answer: \"My experience with both relational(SQL) and non - relational(NoSQL) database management systems, as well as my history using MVC pattern frameworks such as Ruby on Rails and Express enables me to deliver you highly cohesive backend api solutions for any service you or your business may need.\"\n            },\n            {question: \"Storing user uploaded images or videos?\",\n            answer: \"I have integrated sites with Amazon Web Services S3 and MongoDB Atlas for cloud data storage, reducing server load and providing great future scalability.\"},\n            {question: \"Need a beautiful and interactive user interface?\",\n            answer: \"I am not only an expert in vanilla DOM manipulation, but also I have extensive front end framework expertise having built multiple single page web apps using React(with or without Redux for state management).I create mobile responsive designs to fit any size screen from mobile phones to widescreen monitors.\"\n            },\n            {question: \"Looking for something completely different? \",\n            answer: \"I have built online games, interactive animations, and other highly unique pages that will leave a lasting impression and help drive traffic to your site. I am constantly researching and experimenting with the latest web development technologies to push the limits of possible user experience in modern browsers.\"\n            },\n        ]\n        };\n\n\n    }\n\n    render(){\n        return(\n            <div className=\"aboutContainer\" id=\"about\"> \n                < h1 > I'm Nate, a <strong>software engineer</strong> and <strong>web developer</strong>,</h1>\n                < h3 >with experience in JavaScript, Node.js, React.js, Redux, SQL, Ruby on Rails, Git, HTML5, CSS3, and More </h3>\n                <p>\n                    I deliver full service web solutions to help your business maximize productivity and performance online.  When it comes to websites itâ€™s not just about creating something great looking, it needs to deliver results for you.  Using my skills across both front end and back end I will design and develop for you not only great presentations but also scalable and performant data management systems.\n                </p>\n                <p>\n                    Every website has unique needs and challenges.  I have a deep technology toolkit and I know how to engineer the right system for the job:\n                </p>\n                {this.state.faq.map((faq, idx) => \n                <AboutItem question={faq.question} answer={faq.answer} key={idx}/>\n                )}\n                <p>\n                    If you've read this far, it's because you're interested in seeing what I have to offer or retaining my services.  Check out some live demos of my projects or view my resume and contact information below.\n                </p>\n            </div>\n        )\n    }\n\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport Navbar from './nav';\nimport Header from './head';\nimport About from './about';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Navbar />\n      <About />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}